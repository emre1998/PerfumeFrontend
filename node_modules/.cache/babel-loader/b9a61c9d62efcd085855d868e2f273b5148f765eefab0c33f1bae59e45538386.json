{"ast":null,"code":"import axios from'axios';import{FETCH_ORDER_SUCCESS,ORDER_ADDED_SUCCESS,ORDER_ADDED_FAILURE,ORDER_CONFIRMED_SUCCESS,FETCH_USER_ORDERS_SUCCESS}from\"../utils/constants/actions-types\";import{API_BASE_URL}from\"../utils/constants/url\";export const fetchOrder=()=>async dispatch=>{const response=await axios({method:\"GET\",url:API_BASE_URL+\"/order\",Headers:{\"Content-Type\":\"application/json\",\"Authorization\":localStorage.getItem(\"token\")}});dispatch({type:FETCH_ORDER_SUCCESS,payload:response.data});};export const addOrder=(order,history)=>async dispatch=>{try{const response=await axios({method:\"POST\",url:API_BASE_URL+\"/order\",data:order,headers:{\"Content-Type\":\"application/json\",\"Authorization\":localStorage.getItem(\"token\")}});history.push(\"/order/finalize\");dispatch({type:ORDER_ADDED_SUCCESS,payload:response.data});}catch(error){dispatch({type:ORDER_ADDED_FAILURE,payload:error.response.data});}};export const fetchUserOrders=()=>async dispatch=>{const resonse=await axios({method:\"GET\",url:API_BASE_URL+\"/user/orders\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":localStorage.getItem(\"token\")}});dispatch({type:FETCH_USER_ORDERS_SUCCESS,payload:resonse.data});};export const finalizeOrder=()=>async dispatch=>{const response=await axios.get(API_BASE_URL+\"/order/finalize\");dispatch({type:ORDER_CONFIRMED_SUCCESS,payload:response.data});};","map":{"version":3,"names":["axios","FETCH_ORDER_SUCCESS","ORDER_ADDED_SUCCESS","ORDER_ADDED_FAILURE","ORDER_CONFIRMED_SUCCESS","FETCH_USER_ORDERS_SUCCESS","API_BASE_URL","fetchOrder","dispatch","response","method","url","Headers","localStorage","getItem","type","payload","data","addOrder","order","history","headers","push","error","fetchUserOrders","resonse","finalizeOrder","get"],"sources":["C:/Users/EMRE CAN/frontend/src/actions/order-actions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n    FETCH_ORDER_SUCCESS,\r\n    ORDER_ADDED_SUCCESS,\r\n    ORDER_ADDED_FAILURE,\r\n    ORDER_CONFIRMED_SUCCESS,\r\n    FETCH_USER_ORDERS_SUCCESS\r\n} from \"../utils/constants/actions-types\";\r\nimport {API_BASE_URL} from \"../utils/constants/url\";\r\n\r\n\r\nexport const fetchOrder = () => async (dispatch) => {\r\n    const response = await axios ({\r\n        method:\"GET\",\r\n        url:API_BASE_URL +\"/order\",\r\n        Headers: {\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":localStorage.getItem(\"token\")\r\n        }\r\n    });\r\n\r\n    dispatch({\r\n        type:FETCH_ORDER_SUCCESS,\r\n        payload:response.data\r\n    })\r\n};\r\n\r\nexport const addOrder = (order,history) => async (dispatch) => {\r\n    try {\r\n        const response = await axios({\r\n            method:\"POST\",\r\n            url:API_BASE_URL + \"/order\",\r\n            data:order,\r\n            headers: {\r\n                \"Content-Type\" :\"application/json\",\r\n                \"Authorization\":localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        history.push(\"/order/finalize\");\r\n\r\n        dispatch({\r\n            type:ORDER_ADDED_SUCCESS,\r\n            payload:response.data\r\n        })\r\n    }catch(error) {\r\n        dispatch({\r\n            type:ORDER_ADDED_FAILURE,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const fetchUserOrders = () => async (dispatch) => {\r\n    const resonse = await axios({\r\n        method:\"GET\",\r\n        url:API_BASE_URL + \"/user/orders\",\r\n        headers: {\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":localStorage.getItem(\"token\")\r\n        }\r\n    });\r\n    dispatch({\r\n        type:FETCH_USER_ORDERS_SUCCESS,\r\n        payload:resonse.data\r\n    })\r\n};\r\n\r\nexport const finalizeOrder = () => async (dispatch) => {\r\n    const response = await axios.get(API_BASE_URL +\"/order/finalize\");\r\n\r\n    dispatch({\r\n        type:ORDER_CONFIRMED_SUCCESS,\r\n        payload:response.data\r\n    })\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OACIC,mBAAmB,CACnBC,mBAAmB,CACnBC,mBAAmB,CACnBC,uBAAuB,CACvBC,yBAAyB,KACtB,kCAAkC,CACzC,OAAQC,YAAY,KAAO,wBAAwB,CAGnD,MAAO,MAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,KAAO,CAAAC,QAAQ,EAAK,CAChD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAAE,CAC1BU,MAAM,CAAC,KAAK,CACZC,GAAG,CAACL,YAAY,CAAE,QAAQ,CAC1BM,OAAO,CAAE,CACL,cAAc,CAAC,kBAAkB,CACjC,eAAe,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAChD,CACJ,CAAC,CAAC,CAEFN,QAAQ,CAAC,CACLO,IAAI,CAACd,mBAAmB,CACxBe,OAAO,CAACP,QAAQ,CAACQ,IACrB,CAAC,CAAC,CACN,CAAC,CAED,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAACC,KAAK,CAACC,OAAO,GAAK,KAAO,CAAAZ,QAAQ,EAAK,CAC3D,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAAC,CACzBU,MAAM,CAAC,MAAM,CACbC,GAAG,CAACL,YAAY,CAAG,QAAQ,CAC3BW,IAAI,CAACE,KAAK,CACVE,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAACR,YAAY,CAACC,OAAO,CAAC,OAAO,CAChD,CACJ,CAAC,CAAC,CACFM,OAAO,CAACE,IAAI,CAAC,iBAAiB,CAAC,CAE/Bd,QAAQ,CAAC,CACLO,IAAI,CAACb,mBAAmB,CACxBc,OAAO,CAACP,QAAQ,CAACQ,IACrB,CAAC,CAAC,CACN,CAAC,MAAMM,KAAK,CAAE,CACVf,QAAQ,CAAC,CACLO,IAAI,CAACZ,mBAAmB,CACxBa,OAAO,CAACO,KAAK,CAACd,QAAQ,CAACQ,IAC3B,CAAC,CAAC,CACN,CACJ,CAAC,CAED,MAAO,MAAM,CAAAO,eAAe,CAAGA,CAAA,GAAM,KAAO,CAAAhB,QAAQ,EAAK,CACrD,KAAM,CAAAiB,OAAO,CAAG,KAAM,CAAAzB,KAAK,CAAC,CACxBU,MAAM,CAAC,KAAK,CACZC,GAAG,CAACL,YAAY,CAAG,cAAc,CACjCe,OAAO,CAAE,CACL,cAAc,CAAC,kBAAkB,CACjC,eAAe,CAACR,YAAY,CAACC,OAAO,CAAC,OAAO,CAChD,CACJ,CAAC,CAAC,CACFN,QAAQ,CAAC,CACLO,IAAI,CAACV,yBAAyB,CAC9BW,OAAO,CAACS,OAAO,CAACR,IACpB,CAAC,CAAC,CACN,CAAC,CAED,MAAO,MAAM,CAAAS,aAAa,CAAGA,CAAA,GAAM,KAAO,CAAAlB,QAAQ,EAAK,CACnD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAAC2B,GAAG,CAACrB,YAAY,CAAE,iBAAiB,CAAC,CAEjEE,QAAQ,CAAC,CACLO,IAAI,CAACX,uBAAuB,CAC5BY,OAAO,CAACP,QAAQ,CAACQ,IACrB,CAAC,CAAC,CACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}