{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EMRE CAN\\\\frontend\\\\src\\\\pages\\\\UserOrdersList\\\\UserOrdersList.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { fetchUserOrders } from \"../../actions/order-action\";\nimport OrdersTable from \"../../components/OrdersTable/OrdersTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserOrdersList extends Component {\n  componentDidMount() {\n    this.props.fetchUserOrders();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(OrdersTable, {\n      orders: this.props.orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n}\nUserOrdersList.propTypes = {\n  fetchUserOrders: PropTypes.func.isRequired,\n  orders: PropTypes.array.isRequired\n};\nconst mapStateToProps = state => ({\n  orders: state.order.orders\n});\nexport default connect(mapStateToProps, {\n  fetchUserOrders\n})(UserOrdersList);","map":{"version":3,"names":["React","Component","connect","PropTypes","fetchUserOrders","OrdersTable","jsxDEV","_jsxDEV","UserOrdersList","componentDidMount","props","render","orders","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","func","isRequired","array","mapStateToProps","state","order"],"sources":["C:/Users/EMRE CAN/frontend/src/pages/UserOrdersList/UserOrdersList.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {fetchUserOrders} from \"../../actions/order-action\";\r\nimport OrdersTable from \"../../components/OrdersTable/OrdersTable\";\r\n\r\nclass UserOrdersList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUserOrders();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <OrdersTable orders={this.props.orders}/>\r\n        );\r\n    }\r\n}\r\n\r\nUserOrdersList.propTypes = {\r\n    fetchUserOrders: PropTypes.func.isRequired,\r\n    orders: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orders: state.order.orders\r\n});\r\n\r\nexport default connect(mapStateToProps, {fetchUserOrders})(UserOrdersList);"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,OAAO,QAAO,aAAa;AACnC,OAAOC,SAAS,MAAM,YAAY;AAElC,SAAQC,eAAe,QAAO,4BAA4B;AAC1D,OAAOC,WAAW,MAAM,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,cAAc,SAASP,SAAS,CAAC;EAEnCQ,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,KAAK,CAACN,eAAe,CAAC,CAAC;EAChC;EAEAO,MAAMA,CAAA,EAAG;IACL,oBACIJ,OAAA,CAACF,WAAW;MAACO,MAAM,EAAE,IAAI,CAACF,KAAK,CAACE;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAEjD;AACJ;AAEAR,cAAc,CAACS,SAAS,GAAG;EACvBb,eAAe,EAAED,SAAS,CAACe,IAAI,CAACC,UAAU;EAC1CP,MAAM,EAAET,SAAS,CAACiB,KAAK,CAACD;AAC5B,CAAC;AAED,MAAME,eAAe,GAAIC,KAAK,KAAM;EAChCV,MAAM,EAAEU,KAAK,CAACC,KAAK,CAACX;AACxB,CAAC,CAAC;AAEF,eAAeV,OAAO,CAACmB,eAAe,EAAE;EAACjB;AAAe,CAAC,CAAC,CAACI,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}