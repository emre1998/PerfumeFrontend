{"ast":null,"code":"import React,{Component}from'react';import{connect}from\"react-redux\";import EditPerfumes from\"./EditPerfumes\";import{fetchPerfumes}from\"../../actions/perfume-actions\";import{jsx as _jsx}from\"react/jsx-runtime\";class EditPerfumesList extends Component{componentDidMount(){this.props.fetchPerfumes();}render(){const{perfumes}=this.props;const itemsPerPage=24;const searchByData=[{label:'Brand',value:'perfumer'},{label:'Perfume title',value:'perfumeTitle'},{label:'Manufacturer country',value:'country'},{label:'Gender',value:'perfumeGender'}];return/*#__PURE__*/_jsx(EditPerfumes,{data:perfumes,itemsPerPage:itemsPerPage,searchByData:searchByData});}}const mapStateToProps=state=>({perfumes:state.perfume.perfumes});export default connect(mapStateToProps,{fetchPerfumes})(EditPerfumesList);","map":{"version":3,"names":["React","Component","connect","EditPerfumes","fetchPerfumes","jsx","_jsx","EditPerfumesList","componentDidMount","props","render","perfumes","itemsPerPage","searchByData","label","value","data","mapStateToProps","state","perfume"],"sources":["C:/Users/EMRE CAN/frontend/src/pages/EditPerfumesList/EditPerfumesList.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport EditPerfumes from \"./EditPerfumes\";\r\nimport {fetchPerfumes} from \"../../actions/perfume-actions\";\r\n\r\nclass EditPerfumesList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPerfumes();\r\n    }\r\n\r\n    render() {\r\n        const {perfumes} = this.props;\r\n        const itemsPerPage = 24;\r\n        const searchByData = [\r\n            {label: 'Brand', value: 'perfumer'},\r\n            {label: 'Perfume title', value: 'perfumeTitle'},\r\n            {label: 'Manufacturer country', value: 'country'},\r\n            {label: 'Gender', value: 'perfumeGender'}\r\n        ];\r\n\r\n        return (\r\n            <EditPerfumes\r\n                data={perfumes}\r\n                itemsPerPage={itemsPerPage}\r\n                searchByData={searchByData}/>\r\n        );\r\n    }\r\n}\r\n\r\nEditPerfumesList.propTypes = {\r\n    fetchPerfumes: PropTypes.func.isRequired,\r\n    perfumes: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    perfumes: state.perfume.perfumes\r\n});\r\n\r\nexport default connect(mapStateToProps, {fetchPerfumes})(EditPerfumesList);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,KAAO,OAAO,CAEtC,OAAQC,OAAO,KAAO,aAAa,CAEnC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,OAAQC,aAAa,KAAO,+BAA+B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5D,KAAM,CAAAC,gBAAgB,QAAS,CAAAN,SAAU,CAErCO,iBAAiBA,CAAA,CAAG,CAChB,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC,CAAC,CAC9B,CAEAM,MAAMA,CAAA,CAAG,CACL,KAAM,CAACC,QAAQ,CAAC,CAAG,IAAI,CAACF,KAAK,CAC7B,KAAM,CAAAG,YAAY,CAAG,EAAE,CACvB,KAAM,CAAAC,YAAY,CAAG,CACjB,CAACC,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,UAAU,CAAC,CACnC,CAACD,KAAK,CAAE,eAAe,CAAEC,KAAK,CAAE,cAAc,CAAC,CAC/C,CAACD,KAAK,CAAE,sBAAsB,CAAEC,KAAK,CAAE,SAAS,CAAC,CACjD,CAACD,KAAK,CAAE,QAAQ,CAAEC,KAAK,CAAE,eAAe,CAAC,CAC5C,CAED,mBACIT,IAAA,CAACH,YAAY,EACTa,IAAI,CAAEL,QAAS,CACfC,YAAY,CAAEA,YAAa,CAC3BC,YAAY,CAAEA,YAAa,CAAC,CAAC,CAEzC,CACJ,CAOA,KAAM,CAAAI,eAAe,CAAIC,KAAK,GAAM,CAChCP,QAAQ,CAAEO,KAAK,CAACC,OAAO,CAACR,QAC5B,CAAC,CAAC,CAEF,cAAe,CAAAT,OAAO,CAACe,eAAe,CAAE,CAACb,aAAa,CAAC,CAAC,CAACG,gBAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}