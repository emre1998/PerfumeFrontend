{"ast":null,"code":"import React,{Component}from\"react\";import{Route}from\"react-router-dom\";import{connect}from\"react-redux\";import Checkbox from\"../../components/CheckBox/CheckBox\";import CheckboxRadio from\"../../components/CheckBoxRadio/CheckBoxRadio\";import MenuCards from\"../../components/MenuCards/MenuCards\";import{gender,perfumer,price}from\"./MenuData\";import{fetchPerfumes,fetchPerfumesByPerfumer,fetchPerfumesByGender,fetchPerfumesByFilterParams}from\"../../actions/perfume-actions\";import\"./MenuStyle.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class Menu extends Component{constructor(){super(...arguments);this.state={filterParams:{perfumers:[],genders:[],prices:[]}};this.getProducts=variables=>{this.props.fetchPerfumesByFilterParams(variables);};this.handlePrice=value=>{const data=price;let array=[];for(let key in data){if(data[key].id===parseInt(value,10)){array=data[key].array;}}return array;};this.handleFilters=(filters,category)=>{const newFilters=this.state.filterParams;newFilters[category]=filters;if(category===\"prices\"){let priceValues=this.handlePrice(filters);newFilters[category]=priceValues;}this.getProducts(newFilters);this.setState(newFilters);};}componentDidMount(){const perfumeData=this.props.location.state.id;if(perfumeData===\"female\"||perfumeData===\"male\"){this.props.fetchPerfumesByGender({perfumeGender:perfumeData});window.scrollTo(0,0);}else if(perfumeData===\"all\"){this.props.fetchPerfumes();window.scrollTo(0,0);}else if(perfumeData){this.props.fetchPerfumesByPerfumer({perfumer:perfumeData});window.scrollTo(0,0);}}render(){const{perfumes}=this.props;return/*#__PURE__*/_jsxs(\"div\",{className:\"container d-flex\",children:[/*#__PURE__*/_jsxs(\"nav\",{id:\"sidebar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sidebar-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Perfumes\"})}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-unstyled components\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Brand\"}),/*#__PURE__*/_jsx(\"li\",{className:\"active mb-2\",id:\"homeSubmenu\",children:/*#__PURE__*/_jsx(Checkbox,{list:perfumer,handleFilters:filters=>this.handleFilters(filters,\"perfumers\")})}),/*#__PURE__*/_jsx(\"h5\",{children:\"Gender\"}),/*#__PURE__*/_jsx(\"li\",{className:\"active mb-2\",children:/*#__PURE__*/_jsx(Checkbox,{list:gender,handleFilters:filters=>this.handleFilters(filters,\"genders\")})}),/*#__PURE__*/_jsx(\"h5\",{children:\"Price\"}),/*#__PURE__*/_jsx(\"li\",{className:\"active mb-2\",children:/*#__PURE__*/_jsx(CheckboxRadio,{list:price,handleFilters:filters=>this.handleFilters(filters,\"prices\")})})]})]}),/*#__PURE__*/_jsx(Route,{exact:true,component:()=>/*#__PURE__*/_jsx(MenuCards,{data:perfumes,itemsPerPage:16,searchByData:[{label:'Brand',value:'perfumer'},{label:'Perfume title',value:'perfumeTitle'},{label:'Manufacturer country',value:'country'}]})})]});}}const mapStateToProps=state=>({perfumes:state.perfume.perfumes});export default connect(mapStateToProps,{fetchPerfumes,fetchPerfumesByPerfumer,fetchPerfumesByGender,fetchPerfumesByFilterParams})(Menu);","map":{"version":3,"names":["React","Component","Route","connect","Checkbox","CheckboxRadio","MenuCards","gender","perfumer","price","fetchPerfumes","fetchPerfumesByPerfumer","fetchPerfumesByGender","fetchPerfumesByFilterParams","jsx","_jsx","jsxs","_jsxs","Menu","constructor","arguments","state","filterParams","perfumers","genders","prices","getProducts","variables","props","handlePrice","value","data","array","key","id","parseInt","handleFilters","filters","category","newFilters","priceValues","setState","componentDidMount","perfumeData","location","perfumeGender","window","scrollTo","render","perfumes","className","children","list","exact","component","itemsPerPage","searchByData","label","mapStateToProps","perfume"],"sources":["C:/Users/EMRE CAN/frontend/src/pages/Menu/Menu.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Checkbox from \"../../components/CheckBox/CheckBox\";\r\nimport CheckboxRadio from \"../../components/CheckBoxRadio/CheckBoxRadio\";\r\nimport MenuCards from \"../../components/MenuCards/MenuCards\";\r\nimport {gender, perfumer, price} from \"./MenuData\";\r\nimport {\r\n    fetchPerfumes,\r\n    fetchPerfumesByPerfumer,\r\n    fetchPerfumesByGender,\r\n    fetchPerfumesByFilterParams\r\n} from \"../../actions/perfume-actions\";\r\nimport \"./MenuStyle.css\";\r\n\r\nclass Menu extends Component {\r\n    state = {\r\n        filterParams: {\r\n            perfumers: [],\r\n            genders: [],\r\n            prices: []\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const perfumeData = this.props.location.state.id;\r\n\r\n        if (perfumeData === \"female\" || perfumeData === \"male\") {\r\n            this.props.fetchPerfumesByGender({perfumeGender: perfumeData});\r\n            window.scrollTo(0, 0);\r\n        } else if (perfumeData === \"all\") {\r\n            this.props.fetchPerfumes();\r\n            window.scrollTo(0, 0);\r\n        } else if (perfumeData) {\r\n            this.props.fetchPerfumesByPerfumer({perfumer: perfumeData});\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    getProducts = (variables) => {\r\n        this.props.fetchPerfumesByFilterParams(variables);\r\n    };\r\n\r\n    handlePrice = (value) => {\r\n        const data = price;\r\n        let array = [];\r\n\r\n        for (let key in data) {\r\n            if (data[key].id === parseInt(value, 10)) {\r\n                array = data[key].array;\r\n            }\r\n        }\r\n\r\n        return array\r\n    };\r\n\r\n    handleFilters = (filters, category) => {\r\n        const newFilters = this.state.filterParams\r\n        newFilters[category] = filters\r\n\r\n        if (category === \"prices\") {\r\n            let priceValues = this.handlePrice(filters)\r\n            newFilters[category] = priceValues\r\n        }\r\n\r\n        this.getProducts(newFilters)\r\n        this.setState(newFilters);\r\n    };\r\n\r\n    render() {\r\n        const {perfumes} = this.props;\r\n\r\n        return (\r\n            <div className=\"container d-flex\">\r\n                <nav id=\"sidebar\">\r\n                    <div className=\"sidebar-header\">\r\n                        <h3>Perfumes</h3>\r\n                    </div>\r\n                    <ul className=\"list-unstyled components\">\r\n                        <h5>Brand</h5>\r\n                        <li className=\"active mb-2\" id=\"homeSubmenu\">\r\n                            <Checkbox list={perfumer}\r\n                                      handleFilters={(filters) => this.handleFilters(filters, \"perfumers\")}/>\r\n                        </li>\r\n                        <h5>Gender</h5>\r\n                        <li className=\"active mb-2\">\r\n                            <Checkbox list={gender}\r\n                                      handleFilters={(filters) => this.handleFilters(filters, \"genders\")}/>\r\n                        </li>\r\n                        <h5>Price</h5>\r\n                        <li className=\"active mb-2\">\r\n                            <CheckboxRadio list={price}\r\n                                           handleFilters={(filters) => this.handleFilters(filters, \"prices\")}/>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                <Route exact component={() => <MenuCards data={perfumes} itemsPerPage={16} searchByData={[\r\n                    {label: 'Brand', value: 'perfumer'},\r\n                    {label: 'Perfume title', value: 'perfumeTitle'},\r\n                    {label: 'Manufacturer country', value: 'country'}]}/>}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMenu.propTypes = {\r\n    fetchPerfumes: PropTypes.func.isRequired,\r\n    fetchPerfumesByPerfumer: PropTypes.func.isRequired,\r\n    fetchPerfumesByGender: PropTypes.func.isRequired,\r\n    fetchPerfumesByFilterParams: PropTypes.func.isRequired,\r\n    perfumes: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    perfumes: state.perfume.perfumes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchPerfumes,\r\n    fetchPerfumesByPerfumer,\r\n    fetchPerfumesByGender,\r\n    fetchPerfumesByFilterParams\r\n})(Menu);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}