{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, FORM_RESET, REGISTER_SUCCESS, LOGIN_FAILURE, REGISTER_FAILURE, LOGOUT_SUCCESS, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILURE, ACTIVATE_ACCOUNT_SUCCESS, ACTIVATE_ACCOUNT_FAILURE, RESET_PASSWORD_CODE_SUCCESS, RESET_PASSWORD_CODE_FAILURE, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAILURE } from \"../utils/constants/actions-types\";\nimport { API_BASE_URL } from \"../utils/constants/url\";\nexport const login = (data, history) => async dispatch => {\n  try {\n    const response = await axios.post(API_BASE_URL + \"/login\", data);\n    localStorage.setItem(\"email\", response.data.email);\n    localStorage.setItem(\"token\", response.data.token);\n    localStorage.setItem(\"usserRole\", response.data.userRole);\n    localStorage.setItem(\"isLoggedIn\", true);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data\n    });\n    history.push(\"/account\");\n    window.location.reload();\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error.response.data\n    });\n  }\n};\nexport const registration = data => async dispatch => {\n  try {\n    const response = await axios.post(API_BASE_URL + \"/registration\", data);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAILURE,\n      payload: error.response.data\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.clear();\n  dispatch({\n    type: LOGOUT_SUCCESS\n  });\n};\nexport const activateAccount = code => async dispatch => {\n  try {\n    const response = await axios.get(API_BASE_URL + \"/activate/\" + code);\n    dispatch({\n      type: ACTIVATE_ACCOUNT_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: ACTIVATE_ACCOUNT_FAILURE,\n      payload: error.response.data\n    });\n  }\n};\nexport const forgotPassword = data => async dispatch => {\n  try {\n    const response = await axios.post(API_BASE_URL + \"/forgot\", data);\n    dispatch({\n      type: FORGOT_PASSWORD_SUCCESS,\n      payload: error.response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FORGOT_PASSWORD_FAILURE,\n      payload: error.response.data\n    });\n  }\n};\nexport const fetchResetPasswordCode = code => async dispatch => {\n  try {\n    const response = await axios.get(API_BASE_URL + \"/reset/\" + code);\n    dispatch({\n      type: RESET_PASSWORD_CODE_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: RESET_PASSWORD_CODE_FAILURE,\n      payload: error.response.data\n    });\n  }\n};\nexport const resetPassword = (data, history) => async dispatch => {\n  try {\n    const response = await axios.post(API_BASE_URL + \"/reset\", data);\n    history.push(\"/login\");\n    dispatch({\n      type: RESET_PASSWORD_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: RESET_PASSWORD_FAILURE,\n      payload: error.response.data\n    });\n  }\n};\nexport const formReset = () => async dispatch => {\n  dispatch({\n    type: FORM_RESET\n  });\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","FORM_RESET","REGISTER_SUCCESS","LOGIN_FAILURE","REGISTER_FAILURE","LOGOUT_SUCCESS","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","ACTIVATE_ACCOUNT_SUCCESS","ACTIVATE_ACCOUNT_FAILURE","RESET_PASSWORD_CODE_SUCCESS","RESET_PASSWORD_CODE_FAILURE","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","API_BASE_URL","login","data","history","dispatch","response","post","localStorage","setItem","email","token","userRole","type","payload","push","window","location","reload","error","registration","logout","clear","activateAccount","code","get","forgotPassword","fetchResetPasswordCode","resetPassword","formReset"],"sources":["C:/Users/EMRE CAN/frontend/src/actions/auth-actions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    FORM_RESET,\r\n    REGISTER_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    REGISTER_FAILURE,\r\n    LOGOUT_SUCCESS,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAILURE,\r\n    ACTIVATE_ACCOUNT_SUCCESS,\r\n    ACTIVATE_ACCOUNT_FAILURE,\r\n    RESET_PASSWORD_CODE_SUCCESS,\r\n    RESET_PASSWORD_CODE_FAILURE,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAILURE\r\n} from \"../utils/constants/actions-types\";\r\n\r\nimport{API_BASE_URL} from \"../utils/constants/url\";\r\n\r\nexport const login = (data,history) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(API_BASE_URL +\"/login\",data);\r\n\r\n        localStorage.setItem(\"email\",response.data.email);\r\n        localStorage.setItem(\"token\",response.data.token);\r\n        localStorage.setItem(\"usserRole\",response.data.userRole);\r\n        localStorage.setItem(\"isLoggedIn\",true);\r\n\r\n        dispatch({\r\n            type:LOGIN_SUCCESS,\r\n            payload:response.data\r\n        })\r\n        history.push(\"/account\");\r\n        window.location.reload();\r\n    }catch(error) {\r\n        dispatch({\r\n            type:LOGIN_FAILURE,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const registration = (data) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(API_BASE_URL+\"/registration\",data);\r\n\r\n        dispatch({\r\n            type:REGISTER_SUCCESS,\r\n            payload:response.data\r\n        })\r\n    }catch(error) {\r\n        dispatch({\r\n            type:REGISTER_FAILURE,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const  logout = () => async (dispatch) => {\r\n    localStorage.clear();\r\n\r\n    dispatch({\r\n        type:LOGOUT_SUCCESS\r\n    })\r\n};\r\n\r\nexport const activateAccount = (code) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(API_BASE_URL + \"/activate/\"+code);\r\n\r\n        dispatch({\r\n            type:ACTIVATE_ACCOUNT_SUCCESS,\r\n            payload:response.data\r\n        })\r\n    }catch(error) {\r\n        dispatch({\r\n            type:ACTIVATE_ACCOUNT_FAILURE,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const forgotPassword = (data) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(API_BASE_URL + \"/forgot\",data);\r\n\r\n        dispatch({\r\n            type:FORGOT_PASSWORD_SUCCESS,\r\n            payload:error.response.data\r\n        })\r\n    }catch(error) {\r\n        dispatch({\r\n            type:FORGOT_PASSWORD_FAILURE,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const fetchResetPasswordCode = (code) => async (dispatch) => {\r\n    try {\r\n        const response = await  axios.get(API_BASE_URL + \"/reset/\" +code);\r\n\r\n        dispatch({\r\n            type:RESET_PASSWORD_CODE_SUCCESS,\r\n            payload:response.data\r\n        })\r\n    }catch(error) {\r\n        dispatch({\r\n            type:RESET_PASSWORD_CODE_FAILURE,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const resetPassword = (data,history) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(API_BASE_URL +\"/reset\",data);\r\n\r\n        history.push(\"/login\");\r\n\r\n        dispatch({\r\n            type:RESET_PASSWORD_SUCCESS,\r\n            payload:response.data\r\n        })\r\n    }catch(error) {\r\n        dispatch({\r\n            type:RESET_PASSWORD_FAILURE,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const formReset = () => async (dispatch) =>{\r\n    dispatch({\r\n        type:FORM_RESET,\r\n    })\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}