{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EMRE CAN\\\\frontend\\\\src\\\\components\\\\CheckBox\\\\CheckBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../../pages/Menu/MenuStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckBox = ({\n  handleFilters,\n  list\n}) => {\n  _s();\n  const [Checked, setChecked] = useState([]);\n  const hadleToggle = value => {\n    const currentIndex = Checked.indexOf(value);\n    const newChecked = [...Checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n    handleFilters(newChecked);\n  };\n  const renderCheckBoxLists = () => list && list.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox ml-3\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: () => hadleToggle(value.name),\n          type: \"checkbox\",\n          checked: Checked.indexOf(value.name) === -1 ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cr\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"cr-icon fas fa-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), value.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-unstyled\",\n    children: renderCheckBoxLists()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_s(CheckBox, \"EZ0MWhx56l4FDKEa2nPRVZW0gSg=\");\n_c = CheckBox;\nexport default CheckBox;\nvar _c;\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CheckBox","handleFilters","list","_s","Checked","setChecked","hadleToggle","value","currentIndex","indexOf","newChecked","push","splice","renderCheckBoxLists","map","index","children","className","onChange","name","type","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EMRE CAN/frontend/src/components/CheckBox/CheckBox.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport \"../../pages/Menu/MenuStyle.css\";\r\n\r\nconst CheckBox = ({handleFilters,list}) => {\r\n    const [Checked,setChecked] = useState([]);\r\n\r\n    const hadleToggle = (value) => {\r\n        const currentIndex = Checked.indexOf(value);\r\n        const newChecked =[...Checked];\r\n\r\n        if(currentIndex === -1) {\r\n            newChecked.push(value)\r\n        }else {\r\n            newChecked.splice(currentIndex,1)\r\n        }\r\n        setChecked(newChecked)\r\n        handleFilters(newChecked)\r\n    };\r\n\r\n    const renderCheckBoxLists = () => list && list.map((value,index)=> (\r\n        <li key = {index} >\r\n            <div className=\"checkbox ml-3\">\r\n                <label>\r\n                    <input onChange={()=> hadleToggle(value.name)} type =\"checkbox\" checked = {Checked.indexOf(value.name) === -1 ? false:true}/>\r\n                    <span className=\"cr\">\r\n                        <i className=\"cr-icon fas fa-check\"></i>\r\n                    </span>\r\n                    {value.name}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n         <ul className=\"list-unstyled\">\r\n            {renderCheckBoxLists()}\r\n         </ul>\r\n    )\r\n}\r\nexport default CheckBox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAACC,aAAa;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMS,WAAW,GAAIC,KAAK,IAAK;IAC3B,MAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAO,CAACF,KAAK,CAAC;IAC3C,MAAMG,UAAU,GAAE,CAAC,GAAGN,OAAO,CAAC;IAE9B,IAAGI,YAAY,KAAK,CAAC,CAAC,EAAE;MACpBE,UAAU,CAACC,IAAI,CAACJ,KAAK,CAAC;IAC1B,CAAC,MAAK;MACFG,UAAU,CAACE,MAAM,CAACJ,YAAY,EAAC,CAAC,CAAC;IACrC;IACAH,UAAU,CAACK,UAAU,CAAC;IACtBT,aAAa,CAACS,UAAU,CAAC;EAC7B,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAMX,IAAI,IAAIA,IAAI,CAACY,GAAG,CAAC,CAACP,KAAK,EAACQ,KAAK,kBAC3DhB,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAD,QAAA,eAC1BjB,OAAA;QAAAiB,QAAA,gBACIjB,OAAA;UAAOmB,QAAQ,EAAEA,CAAA,KAAKZ,WAAW,CAACC,KAAK,CAACY,IAAI,CAAE;UAACC,IAAI,EAAE,UAAU;UAACC,OAAO,EAAIjB,OAAO,CAACK,OAAO,CAACF,KAAK,CAACY,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC7H1B,OAAA;UAAMkB,SAAS,EAAC,IAAI;UAAAD,QAAA,eAChBjB,OAAA;YAAGkB,SAAS,EAAC;UAAsB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,EACNlB,KAAK,CAACY,IAAI;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,GATCV,KAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUZ,CACP,CAAC;EAEF,oBACK1B,OAAA;IAAIkB,SAAS,EAAC,eAAe;IAAAD,QAAA,EACzBH,mBAAmB,CAAC;EAAC;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAnCKH,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}