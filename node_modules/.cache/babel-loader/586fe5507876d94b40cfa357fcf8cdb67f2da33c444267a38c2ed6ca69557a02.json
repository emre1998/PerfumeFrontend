{"ast":null,"code":"import axios from 'axios';\nimport { PERFUME_ADDED_SUCCESS, PERFUME_UPDATED_SUCCESS, PERFUME_ADDED_FAILURE, PERFUME_UPDATED_FAILURE, FETCH_USER_SUCCESS, FETCH_ALL_USERS_SUCCESS, FETCH_ALL_USERS_ORDERS_SUCCESS, FORM_RESET } from \"../utils/constants/actions-types\";\nimport { API_BASE_URL } from \"../utils/constants/url\";\nexport const addPerfume = data => async dispatch => {\n  try {\n    const response = await axios({\n      method: \"POST\",\n      url: API_BASE_URL + \"/admin/add\",\n      data: data,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": localStorage.getItem(\"token\")\n      }\n    });\n    dispatch({\n      type: PERFUME_ADDED_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PERFUME_ADDED_FAILURE,\n      payload: error.repsonse.data\n    });\n  }\n};\nexport const updatePerfume = (data, history) => async dispatch => {\n  try {\n    const response = await axios({\n      method: \"PUT\",\n      url: API_BASE_URL + \"/admin/edit\",\n      data: data,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": localStorage.getItem(\"token\")\n      }\n    });\n    history.push(\"/account\");\n    dispatch({\n      type: PERFUME_UPDATED_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PERFUME_UPDATED_FAILURE,\n      payload: error.repsonse.data\n    });\n  }\n};\nexport const fetchAllUsersOrders = () => async dispatch => {\n  const response = await axios({\n    method: \"GET\",\n    url: API_BASE_URL + \"/admin/orders\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": localStorage.getItem(\"token\")\n    }\n  });\n  dispatch({\n    type: FETCH_ALL_USERS_ORDERS_SUCCESS,\n    payload: response.data\n  });\n};\nexport const fetchAllUsers = () => async dispatch => {\n  const response = await axios({\n    method: \"GET\",\n    url: API_BASE_URL + \"/admin/user/all\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": localStorage.getItem(\"token\")\n    }\n  });\n  dispatch({\n    type: FETCH_ALL_USERS_SUCCESS,\n    payload: response.data\n  });\n};\nexport const fetchUser = id => async dispatch => {\n  const repsonse = await axios({\n    method: \"GET\",\n    url: API_BASE_URL + \"/admin/user/\" + id,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": localStorage.getItem(\"token\")\n    }\n  });\n  dispatch({\n    type: FETCH_USER_SUCCESS,\n    payload: repsonse.data\n  });\n};\nexport const formReset = () => async dispatch => {\n  dispatch({\n    type: FORM_RESET\n  });\n};","map":{"version":3,"names":["axios","PERFUME_ADDED_SUCCESS","PERFUME_UPDATED_SUCCESS","PERFUME_ADDED_FAILURE","PERFUME_UPDATED_FAILURE","FETCH_USER_SUCCESS","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_ORDERS_SUCCESS","FORM_RESET","API_BASE_URL","addPerfume","data","dispatch","response","method","url","headers","localStorage","getItem","type","payload","error","repsonse","updatePerfume","history","push","fetchAllUsersOrders","fetchAllUsers","fetchUser","id","formReset"],"sources":["C:/Users/EMRE CAN/frontend/src/actions/admin-actions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n    PERFUME_ADDED_SUCCESS,\r\n    PERFUME_UPDATED_SUCCESS,\r\n    PERFUME_ADDED_FAILURE,\r\n    PERFUME_UPDATED_FAILURE,\r\n    FETCH_USER_SUCCESS,\r\n    FETCH_ALL_USERS_SUCCESS,\r\n    FETCH_ALL_USERS_ORDERS_SUCCESS, FORM_RESET\r\n} from \"../utils/constants/actions-types\";\r\n\r\nimport {API_BASE_URL} from \"../utils/constants/url\";\r\n\r\nexport const addPerfume = (data) => async (dispatch) => {\r\n    try {\r\n        const response = await axios({\r\n            method:\"POST\",\r\n            url:API_BASE_URL + \"/admin/add\",\r\n            data:data,\r\n            headers : {\r\n                \"Content-Type\":\"multipart/form-data\",\r\n                \"Authorization\":localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n\r\n        dispatch({\r\n            type:PERFUME_ADDED_SUCCESS,\r\n            payload:response.data\r\n        })\r\n    }catch(error) {\r\n        dispatch({\r\n            type:PERFUME_ADDED_FAILURE,\r\n            payload:error.repsonse.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const updatePerfume = (data,history) => async (dispatch) => {\r\n    try {\r\n        const response = await axios({\r\n            method:\"PUT\",\r\n            url:API_BASE_URL + \"/admin/edit\",\r\n            data:data,\r\n            headers: {\r\n                \"Content-Type\" : \"multipart/form-data\",\r\n                \"Authorization\" : localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        history.push(\"/account\");\r\n\r\n        dispatch({\r\n            type:PERFUME_UPDATED_SUCCESS,\r\n            payload:response.data\r\n        })\r\n    }catch(error) {\r\n        dispatch({\r\n            type:PERFUME_UPDATED_FAILURE,\r\n            payload:error.repsonse.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const fetchAllUsersOrders = () => async (dispatch) => {\r\n    const response = await axios ({\r\n        method:\"GET\",\r\n        url:API_BASE_URL + \"/admin/orders\",\r\n        headers: {\r\n            \"Content-Type\" :\"application/json\",\r\n            \"Authorization\":localStorage.getItem(\"token\")\r\n        }\r\n    });\r\n\r\n    dispatch({\r\n        type:FETCH_ALL_USERS_ORDERS_SUCCESS,\r\n        payload:response.data\r\n    })\r\n};\r\n\r\nexport const fetchAllUsers = () => async (dispatch) => {\r\n    const response = await axios({\r\n        method:\"GET\",\r\n        url:API_BASE_URL +\"/admin/user/all\",\r\n        headers: {\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":localStorage.getItem(\"token\")\r\n        }\r\n    });\r\n\r\n    dispatch({\r\n        type:FETCH_ALL_USERS_SUCCESS,\r\n        payload:response.data\r\n    })\r\n};\r\n\r\nexport const fetchUser = (id) => async (dispatch) => {\r\n    const repsonse = await axios({\r\n        method:\"GET\",\r\n        url:API_BASE_URL + \"/admin/user/\" + id,\r\n        headers: {\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":localStorage.getItem(\"token\")\r\n        }\r\n    });\r\n\r\n    dispatch({\r\n        type:FETCH_USER_SUCCESS,\r\n        payload:repsonse.data\r\n    })\r\n};\r\n\r\nexport const formReset = () => async (dispatch) => {\r\n    dispatch({\r\n        type:FORM_RESET\r\n    })\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}